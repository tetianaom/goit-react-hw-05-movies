{"version":3,"file":"static/js/963.6f6e6440.chunk.js","mappings":"gMAEaA,E,QAAUC,EAAAA,IAAH,4G,SCCPC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,OAAO,KACPC,MAAM,KACNC,MAAM,YACNC,UAAU,kBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,yGCfYC,EAAYT,EAAAA,EAAAA,GAAH,6CAITU,EAAYV,EAAAA,EAAAA,GAAH,iI,gLCJTD,EAAUC,EAAAA,EAAAA,KAAH,sJAQPW,EAAQX,EAAAA,EAAAA,MAAH,+FAMLY,EAAgBZ,EAAAA,EAAAA,OAAH,2N,SCZba,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAYA,OACE,UAAClB,EAAD,CAASe,SAPU,SAAAI,GACnBA,EAAMC,iBACNL,EAASE,GACTC,EAAU,GACX,EAGC,WACE,SAACL,EAAD,CAAeQ,KAAK,SAApB,UACE,SAAC,MAAD,CAAUC,KAAK,YAEjB,SAACV,EAAD,CAAOS,KAAK,OAAOE,MAAON,EAAQO,SAfjB,SAAAL,GACnBD,EAAUC,EAAMM,OAAOF,MACxB,MAgBF,E,wCCYD,EA3Be,WACb,MCPgC,WAChC,OAA4BP,EAAAA,EAAAA,UAAS,IAArC,eAAOU,EAAP,KAAeC,EAAf,KACA,GAA8BX,EAAAA,EAAAA,WAAS,GAAvC,eAAOY,EAAP,KAAgBC,EAAhB,KACA,GAA0Bb,EAAAA,EAAAA,UAAS,MAAnC,eAAOc,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KA6BA,OA3BAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRC,EAAW,UAAGH,EAAaI,IAAI,gBAApB,QAAgC,GAC3CC,EAAW,mCAAG,oGAEhBT,GAAW,GACXE,EAAS,MAHO,UAKSQ,EAAAA,EAAAA,IAAiBH,GAL1B,OAKVI,EALU,OAOhBb,EAAUa,EAAWC,SAPL,gDAShBV,EAAS,KAAMW,SATC,yBAWhBb,GAAW,GAXK,4EAAH,qDAcjBS,GACD,GAAE,CAACL,IAUG,CAAEP,OAAAA,EAAQE,QAAAA,EAASE,MAAAA,EAAOa,yBARA,SAAAC,GAC/B,GAAc,KAAVA,EACF,OAAOV,EAAgB,CAAC,GAG1BA,EAAgB,CAAEU,MAAOA,GAC1B,EAGF,CD1BGC,GADMnB,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,QAASE,EAAzB,EAAyBA,MAAOa,EAAhC,EAAgCA,yBAE1BG,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAAC,KAAD,YACE,SAACjC,EAAD,CAAYC,SAAU4B,IACrBf,IAAW,SAAC1B,EAAA,EAAD,IACX4B,IAAS,uBAAIA,IACbJ,EAAOsB,OAAS,IACf,SAAC,IAAD,UACGtB,EAAOuB,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,SAAC,IAAD,WACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMR,GAAlC,SACGK,KAFWD,EAMnB,QAKV,C,mMEhCDK,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAHc,oCAMT,IAAMC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAU,sBADF,cACzBG,EADyB,yBAGxBA,EAASC,MAHe,2CAAH,qDAMjBpB,EAAgB,mCAAG,WAAMK,GAAN,uFACPW,EAAAA,EAAAA,IAAA,eAA0B,CAC/CK,OAAQ,CACNhB,MAAAA,KAH0B,cACxBc,EADwB,yBAOvBA,EAASC,MAPc,2CAAH,sDAUhBE,EAAiB,mCAAG,WAAMC,GAAN,uFACRP,EAAAA,EAAAA,IAAA,gBAAmBO,IADX,cACzBJ,EADyB,yBAGxBA,EAASC,MAHe,2CAAH,sDAMjBI,EAAc,mCAAG,WAAMD,GAAN,uFACLP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,aADK,cACtBJ,EADsB,yBAGrBA,EAASC,MAHY,2CAAH,sDAMdK,EAAiB,mCAAG,WAAMF,GAAN,uFACRP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,aADQ,cACzBJ,EADyB,yBAGxBA,EAASC,MAHe,2CAAH,qD","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesTrendingList/MoviesTrendingList.styled.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","hooks/useFetchSearchForm.jsx","services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import { Circles } from 'react-loader-spinner';\nimport { Wrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Wrapper>\n      <Circles\n        height=\"80\"\n        width=\"80\"\n        color=\"#a71ad1d4\"\n        ariaLabel=\"circles-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </Wrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const MovieList = styled.ul`\n  line-height: 1.5;\n`;\n\nexport const MovieItem = styled.li`\n  > a {\n    color: #31313a;\n    text-decoration: none;\n  }\n\n  a:visited {\n    color: #31313a;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.form`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const IconSearchBtn = styled.button`\n  width: 30px;\n  height: 30px;\n\n  font-size: 20px;\n  font-weight: bold;\n  color: #0b0e96;\n\n  position: absolute;\n  top: 5px;\n  right: 5px;\n\n  background-color: #fff;\n  border: none;\n`;\n","import { FiSearch } from 'react-icons/fi';\nimport { useState } from 'react';\nimport { Wrapper, IconSearchBtn, Input } from './SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const handleChange = event => {\n    setSearch(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(search);\n    setSearch('');\n  };\n\n  return (\n    <Wrapper onSubmit={handleSubmit}>\n      <IconSearchBtn type=\"submit\">\n        <FiSearch size=\"16px\" />\n      </IconSearchBtn>\n      <Input type=\"text\" value={search} onChange={handleChange} />\n    </Wrapper>\n  );\n};\n","import { useFetchSearchForm } from 'hooks/useFetchSearchForm';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { Container } from 'components/SharedLayout/SharedLayout.styled';\nimport {\n  MovieList,\n  MovieItem,\n} from 'components/MoviesTrendingList/MoviesTrendingList.styled';\n\nconst Movies = () => {\n  const { movies, loading, error, handleChangeSearchParams } =\n    useFetchSearchForm();\n  const location = useLocation();\n\n  return (\n    <Container>\n      <SearchForm onSubmit={handleChangeSearchParams} />\n      {loading && <Loader />}\n      {error && <p>{error}</p>}\n      {movies.length > 0 && (\n        <MovieList>\n          {movies.map(({ id, title }) => {\n            return (\n              <MovieItem key={id}>\n                <Link to={`${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </MovieItem>\n            );\n          })}\n        </MovieList>\n      )}\n    </Container>\n  );\n};\n\nexport default Movies;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovieByName } from 'services/API';\n\nexport const useFetchSearchForm = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const queryString = searchParams.get('query') ?? '';\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        const moviesData = await fetchMovieByName(queryString);\n\n        setMovies(moviesData.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [searchParams]);\n\n  const handleChangeSearchParams = query => {\n    if (query === '') {\n      return setSearchParams({});\n    }\n\n    setSearchParams({ query: query });\n  };\n\n  return { movies, loading, error, handleChangeSearchParams };\n};\n","import axios from 'axios';\n\nconst API_KEY = 'b2d4091651a56eb06e12f309ba271df6';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('trending/movie/day');\n\n  return response.data;\n};\n\nexport const fetchMovieByName = async query => {\n  const response = await axios.get(`search/movie`, {\n    params: {\n      query,\n    },\n  });\n\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits`);\n\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews`);\n\n  return response.data;\n};\n"],"names":["Wrapper","styled","Loader","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","MovieList","MovieItem","Input","IconSearchBtn","SearchForm","onSubmit","useState","search","setSearch","event","preventDefault","type","size","value","onChange","target","movies","setMovies","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","useEffect","queryString","get","fetchMovies","fetchMovieByName","moviesData","results","message","handleChangeSearchParams","query","useFetchSearchForm","location","useLocation","length","map","id","title","to","state","from","axios","api_key","getTrendingMovies","response","data","params","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}