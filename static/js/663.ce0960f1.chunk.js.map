{"version":3,"file":"static/js/663.ce0960f1.chunk.js","mappings":"gMAEaA,E,QAAUC,EAAAA,IAAH,4G,SCCPC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,OAAO,KACPC,MAAM,KACNC,MAAM,YACNC,UAAU,kBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,yGCfYC,EAAYT,EAAAA,EAAAA,GAAH,6CAITU,EAAYV,EAAAA,EAAAA,GAAH,iI,oMCHTW,EAAqB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC7BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iCACE,wBAAI,oBACJ,SAAC,IAAD,UACGF,EAAOG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,SAAC,IAAD,WACE,SAAC,KAAD,CAAMC,GAAE,iBAAYF,GAAMG,MAAO,CAAEC,KAAMP,GAAzC,SACGI,KAFWD,EAMnB,QAIR,E,oBCjBYK,EAAO,WAClB,MCHoC,WACpC,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBJ,GAAW,GACXE,EAAS,MAHO,UAKSG,EAAAA,EAAAA,MALT,OAKVC,EALU,OAOhBR,EAAUQ,EAAWC,SAPL,gDAShBL,EAAS,KAAMM,SATC,yBAWhBR,GAAW,GAXK,4EAAH,qDAcjBI,GACD,GAAE,IAEI,CAAEjB,OAAAA,EAAQY,QAAAA,EAASE,MAAAA,EAC3B,CDrBoCQ,GAA3BtB,EAAR,EAAQA,OAAQY,EAAhB,EAAgBA,QAASE,EAAzB,EAAyBA,MAEzB,OACE,SAAC,KAAD,WACE,2BACGF,IAAW,SAACvB,EAAA,EAAD,IACXyB,IAAS,uBAAIA,IACbd,EAAOuB,OAAS,IAAK,SAACxB,EAAD,CAAoBC,OAAQA,QAIzD,EAED,G,mMEhBAwB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAHc,oCAMT,IAAMP,EAAiB,mCAAG,oGACRM,EAAAA,EAAAA,IAAU,sBADF,cACzBE,EADyB,yBAGxBA,EAASC,MAHe,2CAAH,qDAMjBC,EAAgB,mCAAG,WAAMC,GAAN,uFACPL,EAAAA,EAAAA,IAAA,eAA0B,CAC/CM,OAAQ,CACND,MAAAA,KAH0B,cACxBH,EADwB,yBAOvBA,EAASC,MAPc,2CAAH,sDAUhBI,EAAiB,mCAAG,WAAMC,GAAN,uFACRR,EAAAA,EAAAA,IAAA,gBAAmBQ,IADX,cACzBN,EADyB,yBAGxBA,EAASC,MAHe,2CAAH,sDAMjBM,EAAc,mCAAG,WAAMD,GAAN,uFACLR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,aADK,cACtBN,EADsB,yBAGrBA,EAASC,MAHY,2CAAH,sDAMdO,EAAiB,mCAAG,WAAMF,GAAN,uFACRR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,aADQ,cACzBN,EADyB,yBAGxBA,EAASC,MAHe,2CAAH,qD","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesTrendingList/MoviesTrendingList.styled.jsx","components/MoviesTrendingList/MoviesTrendingList.jsx","pages/Home.jsx","hooks/useFetchTrendingMovies.jsx","services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import { Circles } from 'react-loader-spinner';\nimport { Wrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Wrapper>\n      <Circles\n        height=\"80\"\n        width=\"80\"\n        color=\"#a71ad1d4\"\n        ariaLabel=\"circles-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </Wrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const MovieList = styled.ul`\n  line-height: 1.5;\n`;\n\nexport const MovieItem = styled.li`\n  > a {\n    color: #31313a;\n    text-decoration: none;\n  }\n\n  a:visited {\n    color: #31313a;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { MovieList, MovieItem } from './MoviesTrendingList.styled';\n\nexport const MoviesTrendingList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <h2>Trending today</h2>\n      <MovieList>\n        {movies.map(({ id, title }) => {\n          return (\n            <MovieItem key={id}>\n              <Link to={`movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </MovieItem>\n          );\n        })}\n      </MovieList>\n    </>\n  );\n};\n","import { useFetchTrendingMovies } from 'hooks/useFetchTrendingMovies';\nimport { MoviesTrendingList } from 'components/MoviesTrendingList/MoviesTrendingList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Container } from 'components/SharedLayout/SharedLayout.styled';\n\nexport const Home = () => {\n  const { movies, loading, error } = useFetchTrendingMovies();\n\n  return (\n    <Container>\n      <div>\n        {loading && <Loader />}\n        {error && <p>{error}</p>}\n        {movies.length > 0 && <MoviesTrendingList movies={movies} />}\n      </div>\n    </Container>\n  );\n};\n\nexport default Home;\n","import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'services/API';\n\nexport const useFetchTrendingMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        const moviesData = await getTrendingMovies();\n\n        setMovies(moviesData.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return { movies, loading, error };\n};\n","import axios from 'axios';\n\nconst API_KEY = 'b2d4091651a56eb06e12f309ba271df6';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('trending/movie/day');\n\n  return response.data;\n};\n\nexport const fetchMovieByName = async query => {\n  const response = await axios.get(`search/movie`, {\n    params: {\n      query,\n    },\n  });\n\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits`);\n\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews`);\n\n  return response.data;\n};\n"],"names":["Wrapper","styled","Loader","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","MovieList","MovieItem","MoviesTrendingList","movies","location","useLocation","map","id","title","to","state","from","Home","useState","setMovies","loading","setLoading","error","setError","useEffect","fetchMovies","getTrendingMovies","moviesData","results","message","useFetchTrendingMovies","length","axios","api_key","response","data","fetchMovieByName","query","params","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}