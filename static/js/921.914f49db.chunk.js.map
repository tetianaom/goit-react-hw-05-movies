{"version":3,"file":"static/js/921.914f49db.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Movie/Movie.styled.jsx","components/Movie/Movie.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails.jsx","hooks/useFetchMovie.jsx","services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import { Circles } from 'react-loader-spinner';\nimport { Wrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Wrapper>\n      <Circles\n        height=\"80\"\n        width=\"80\"\n        color=\"#a71ad1d4\"\n        ariaLabel=\"circles-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </Wrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  column-gap: 20px;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-top: 0;\n`;\n\nexport const AdditionalList = styled.ul`\n  line-height: 1.5;\n  padding-left: 0;\n  > a {\n    display: block;\n    color: black;\n  }\n\n  > a:visited {\n    color: black;\n  }\n`;\n","import { MovieWrapper, MovieTitle } from './Movie.styled';\n\nexport const Movie = ({\n  id,\n  title,\n  backdrop_path,\n  release_date,\n  overview,\n  vote_average,\n  genres,\n}) => {\n  const imgUrl = backdrop_path\n    ? `https://image.tmdb.org/t/p/w500/${backdrop_path}`\n    : 'https://via.placeholder.com/500x280';\n\n  return (\n    <MovieWrapper key={id}>\n      <div>\n        <img src={imgUrl} alt={title} />\n      </div>\n      <div>\n        <MovieTitle>\n          {title}\n          <span> ({release_date.slice(0, 4)})</span>\n        </MovieTitle>\n        <p>User score: {Math.round(vote_average * 10)}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>\n          {genres.map(genre => (\n            <span>{genre.name} </span>\n          ))}\n        </p>\n      </div>\n    </MovieWrapper>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const BackLinkStyled = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n\n  :hover {\n    color: #4d5ae5;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { BackLinkStyled } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <BackLinkStyled to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </BackLinkStyled>\n  );\n};\n","import { useRef, Suspense } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { useFetchMovie } from 'hooks/useFetchMovie';\nimport { Movie } from 'components/Movie/Movie';\nimport { Loader } from 'components/Loader/Loader';\nimport { Container } from 'components/SharedLayout/SharedLayout.styled';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { AdditionalList } from 'components/Movie/Movie.styled';\n\nconst MovieDetails = () => {\n  const { movie, loading, error } = useFetchMovie();\n  const {\n    id,\n    original_title,\n    backdrop_path,\n    release_date,\n    overview,\n    vote_average,\n    genres,\n  } = movie ?? {};\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  return (\n    <Container>\n      <BackLink to={backLinkLocationRef.current}>Go Back</BackLink>\n      {movie && (\n        <Movie\n          title={original_title}\n          backdrop_path={backdrop_path}\n          release_date={release_date}\n          id={id}\n          overview={overview}\n          genres={genres}\n          vote_average={vote_average}\n        />\n      )}\n      {loading && <Loader />}\n      {error && <p>{error}</p>}\n      <hr />\n      <AdditionalList>\n        <h2>Additional information</h2>\n        <Link to={`credits`}>Cast</Link>\n        <Link to={`reviews`}>Reviews</Link>\n      </AdditionalList>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n","import { useEffect, useState } from 'react';\nimport { fetchMovieDetails } from 'services/API';\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchMovie = () => {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        const movieData = await fetchMovieDetails(movieId);\n\n        setMovie(movieData);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  return { movie, loading, error };\n};\n","import axios from 'axios';\n\nconst API_KEY = 'b2d4091651a56eb06e12f309ba271df6';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('trending/movie/day');\n\n  return response.data;\n};\n\nexport const fetchMovieByName = async query => {\n  const response = await axios.get(`search/movie`, {\n    params: {\n      query,\n    },\n  });\n\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits`);\n\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews`);\n\n  return response.data;\n};\n"],"names":["Wrapper","styled","Loader","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","MovieWrapper","MovieTitle","AdditionalList","Movie","id","title","backdrop_path","release_date","overview","vote_average","genres","imgUrl","src","alt","slice","Math","round","map","genre","name","BackLinkStyled","Link","BackLink","to","children","size","useState","movie","setMovie","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchMovie","fetchMovieDetails","movieData","message","useFetchMovie","original_title","location","useLocation","backLinkLocationRef","useRef","state","from","current","Suspense","fallback","axios","api_key","getTrendingMovies","response","data","fetchMovieByName","query","params","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}